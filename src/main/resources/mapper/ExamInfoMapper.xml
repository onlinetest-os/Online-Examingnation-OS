<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="phion.onlineexam.dao.ExamInfoMapper">
<resultMap id="BaseResultMap" type="phion.onlineexam.bean.ExamInfo">
    <id column="in_id" jdbcType="INTEGER" property="inId" />
    <result column="e_id" jdbcType="INTEGER" property="eId" />
    <result column="all_number" jdbcType="INTEGER" property="allNumber" />
    <result column="is_download" jdbcType="INTEGER" property="isDownload" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="phion.onlineexam.bean.ExamInfo">
    <result column="info" jdbcType="LONGVARCHAR" property="info" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    in_id, e_id, all_number, is_download
  </sql>
  <sql id="Blob_Column_List">
    info
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="phion.onlineexam.bean.ExamInfoExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_exam_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="phion.onlineexam.bean.ExamInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_exam_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  
  <!-- 通过eId查询考试信息 -->
  <!-- ExamInfo selectByExamID(Integer eId); -->
  <select id="selectByExamID" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    from tb_exam_info
    where e_id = #{eId,jdbcType=INTEGER}
  </select>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_exam_info
    where in_id = #{inId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_exam_info
    where in_id = #{inId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="phion.onlineexam.bean.ExamInfoExample">
    delete from tb_exam_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="phion.onlineexam.bean.ExamInfo">
    insert into tb_exam_info (in_id, e_id, all_number, 
      is_download, info)
    values (#{inId,jdbcType=INTEGER}, #{eId,jdbcType=INTEGER}, #{allNumber,jdbcType=INTEGER}, 
      #{isDownload,jdbcType=INTEGER}, #{info,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="phion.onlineexam.bean.ExamInfo">
    insert into tb_exam_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="inId != null">
        in_id,
      </if>
      <if test="eId != null">
        e_id,
      </if>
      <if test="allNumber != null">
        all_number,
      </if>
      <if test="isDownload != null">
        is_download,
      </if>
      <if test="info != null">
        info,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="inId != null">
        #{inId,jdbcType=INTEGER},
      </if>
      <if test="eId != null">
        #{eId,jdbcType=INTEGER},
      </if>
      <if test="allNumber != null">
        #{allNumber,jdbcType=INTEGER},
      </if>
      <if test="isDownload != null">
        #{isDownload,jdbcType=INTEGER},
      </if>
      <if test="info != null">
        #{info,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="phion.onlineexam.bean.ExamInfoExample" resultType="java.lang.Long">
    select count(*) from tb_exam_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_exam_info
    <set>
      <if test="record.inId != null">
        in_id = #{record.inId,jdbcType=INTEGER},
      </if>
      <if test="record.eId != null">
        e_id = #{record.eId,jdbcType=INTEGER},
      </if>
      <if test="record.allNumber != null">
        all_number = #{record.allNumber,jdbcType=INTEGER},
      </if>
      <if test="record.isDownload != null">
        is_download = #{record.isDownload,jdbcType=INTEGER},
      </if>
      <if test="record.info != null">
        info = #{record.info,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update tb_exam_info
    set in_id = #{record.inId,jdbcType=INTEGER},
      e_id = #{record.eId,jdbcType=INTEGER},
      all_number = #{record.allNumber,jdbcType=INTEGER},
      is_download = #{record.isDownload,jdbcType=INTEGER},
      info = #{record.info,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_exam_info
    set in_id = #{record.inId,jdbcType=INTEGER},
      e_id = #{record.eId,jdbcType=INTEGER},
      all_number = #{record.allNumber,jdbcType=INTEGER},
      is_download = #{record.isDownload,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="phion.onlineexam.bean.ExamInfo">
    update tb_exam_info
    <set>
      <if test="eId != null">
        e_id = #{eId,jdbcType=INTEGER},
      </if>
      <if test="allNumber != null">
        all_number = #{allNumber,jdbcType=INTEGER},
      </if>
      <if test="isDownload != null">
        is_download = #{isDownload,jdbcType=INTEGER},
      </if>
      <if test="info != null">
        info = #{info,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where in_id = #{inId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="phion.onlineexam.bean.ExamInfo">
    update tb_exam_info
    set e_id = #{eId,jdbcType=INTEGER},
      all_number = #{allNumber,jdbcType=INTEGER},
      is_download = #{isDownload,jdbcType=INTEGER},
      info = #{info,jdbcType=LONGVARCHAR}
    where in_id = #{inId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="phion.onlineexam.bean.ExamInfo">
    update tb_exam_info
    set e_id = #{eId,jdbcType=INTEGER},
      all_number = #{allNumber,jdbcType=INTEGER},
      is_download = #{isDownload,jdbcType=INTEGER}
    where in_id = #{inId,jdbcType=INTEGER}
  </update>
</mapper>